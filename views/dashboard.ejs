<!DOCTYPE html>
<html>
<head>
  <title>Dashboard</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <style>
    .tab { display: none; }
    .tab.active { display: block; }
    .ticketBox {
      border: 1px solid #ccc;
      padding: 15px;
      border-radius: 10px;
      margin-bottom: 20px;
      background-color: #f8f9fa;
    }
    .form-inline > * {
      margin-right: 10px;
    }
  </style>
</head>
<body class="bg-light p-4">
  <div class="container">
    <div class="d-flex justify-content-between align-items-center mb-4">
		<h2>Welcome, <%= user.displayName %></h2>
		<a href="/logout" class="btn btn-outline-danger">Logout</a>
	</div>


    <div class="row mb-3">
      <div class="col-md-6">
        <label class="form-label" for="trackName">Track:</label>
        <select id="trackName" class="form-select">
          <option>GrandRiver</option>
          <option>Mohawk</option>
          <option>WesternFair</option>
        </select>
      </div>
      <div class="col-md-6">
        <label class="form-label" for="raceDate">Date:</label>
        <input type="date" id="raceDate" class="form-control" />
      </div>
    </div>

    <ul class="nav nav-pills mb-3">
      <li class="nav-item">
        <button class="nav-link active" onclick="switchTab('picks')">Picks</button>
      </li>
      <li class="nav-item">
        <button class="nav-link" onclick="switchTab('tickets')">Tickets</button>
      </li>
    </ul>

    <div id="picksTab" class="tab active">
      <h4>Picks</h4>
      <button class="btn btn-primary btn-sm mb-2" onclick="addPickRow()">‚ûï Add Race</button>
      <table class="table table-bordered" id="picksTable">
        <tr><th>Race #</th><th>Picks (1-2-3)</th><th>Remove</th></tr>
      </table>
      <button class="btn btn-success" onclick="savePicks()">üíæ Save Picks</button>
    </div>

    <div id="ticketsTab" class="tab">
      <h4>Tickets</h4>
      <button class="btn btn-primary btn-sm mb-2" onclick="addTicket()">‚ûï Add Ticket</button>
      <div id="ticketsContainer"></div>
      <button class="btn btn-success" onclick="saveTickets()">üíæ Save Tickets</button>
    </div>
  </div>

<script>
let username = "<%= user.username || '' %>";
let ticketName = "<%= user.displayName || '' %>";

function switchTab(tabName) {
  document.querySelectorAll('.tab').forEach(tab => tab.classList.remove('active'));
  document.getElementById(tabName + 'Tab').classList.add('active');
  document.querySelectorAll('.nav-link').forEach(btn => btn.classList.remove('active'));
  [...document.querySelectorAll('.nav-link')].find(btn => btn.textContent.toLowerCase() === tabName).classList.add('active');
}
window.switchTab = switchTab;

function addPickRow(raceNo = '', picks = '') {
  const row = document.createElement('tr');
  row.innerHTML = `
    <td><input type="number" class="form-control" value="${raceNo}" /></td>
    <td><input type="text" class="form-control" value="${picks}" /></td>
    <td><button class="btn btn-danger btn-sm" onclick="this.closest('tr').remove()">‚úñ</button></td>
  `;
  document.getElementById('picksTable').appendChild(row);
}
window.addPickRow = addPickRow;

function savePicks() {
  const trackName = document.getElementById('trackName').value;
  const date = document.getElementById('raceDate').value;
  const rows = [...document.querySelectorAll('#picksTable tr')].slice(1);
  const races = rows.map(row => {
    const inputs = row.querySelectorAll('input');
    return { raceNo: parseInt(inputs[0].value), picks: inputs[1].value };
  });

  fetch('/api/picks/save', {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({ username, trackName, date, races })
  }).then(res => res.json()).then(() => alert('‚úÖ Picks Saved'));
}
window.savePicks = savePicks;

function addTicket(ticket = null) {
  const container = document.createElement('div');
  container.className = 'ticketBox';
  container.innerHTML = `
    <div class="mb-2">
      <label class="form-label">Ticket Name:</label>
      <input type="text" class="form-control" value="${ticket?.ticketName || ticketName}" />
    </div>
    <div class="row mb-2">
      <div class="col">
        <label class="form-label">Ticket Amount:</label>
        <input type="text" class="form-control ticketAmount" readonly placeholder="$0.00" />
      </div>
      <div class="col">
        <label class="form-label">Base Wager:</label>
        <input type="text" class="form-control baseWager" value="$${(ticket?.baseWager || 0.2).toFixed(2)}" placeholder="$0.20" oninput="recalculateAmount(this)" />
      </div>
      <div class="col">
        <label class="form-label">Start Race:</label>
        <input type="number" class="form-control" value="${ticket?.startRace || 1}" />
      </div>
    </div>
    <button class="btn btn-outline-secondary btn-sm mb-2" onclick="addLeg(this)">Add Leg</button>
    <table class="table table-bordered">
      <tr><th>Leg #</th><th>Selections</th><th>Remove</th></tr>
    </table>
    <button class="btn btn-outline-danger btn-sm mt-2" onclick="this.closest('.ticketBox').remove()">‚ùå Remove Ticket</button>
  `;
  document.getElementById('ticketsContainer').appendChild(container);
}
window.addTicket = addTicket;

function recalculateAmount(triggerInput) {
  const ticketBox = triggerInput.closest('.ticketBox');
  const baseWagerInput = ticketBox.querySelector('.baseWager');
  const ticketAmountInput = ticketBox.querySelector('.ticketAmount');

  const baseWager = parseFloat(baseWagerInput.value.replace(/[^0-9.]/g, '')) || 0;

  const legTable = ticketBox.querySelector('table');
  const rows = [...legTable.querySelectorAll('tr')].slice(1);

  let totalCombos = 1;
  for (const row of rows) {
    const selections = row.querySelectorAll('input')[1].value;
    const count = selections.split('-').filter(Boolean).length;
    if (count === 0) continue;
    totalCombos *= count;
  }

  const total = totalCombos * baseWager;
  ticketAmountInput.value = `$${total.toFixed(2)}`;
}


function addLeg(btn, legNo = '', selections = '') {
  const table = btn.nextElementSibling;
  const nextLeg = table.rows.length;
  const row = document.createElement('tr');
  row.innerHTML = `
    <td><input type="number" class="form-control" value="${nextLeg}" readonly /></td>
    <td><input type="text" class="form-control" value="${selections}" oninput="recalculateAmount(this)" /></td>
    <td><button class="btn btn-danger btn-sm" onclick="this.closest('tr').remove(); recalculateAmount(this)">‚úñ</button></td>
  `;
  table.appendChild(row);
  recalculateAmount(table); // recalculate on add
}

window.addLeg = addLeg;

function saveTickets() {
  const trackName = document.getElementById('trackName').value;
  const date = document.getElementById('raceDate').value;
  const tickets = [...document.querySelectorAll('.ticketBox')].map(box => {
    const inputs = box.querySelectorAll('input');
    const ticketName = inputs[0].value;
    const amount = parseFloat(inputs[1].value.replace(/[^0-9.]/g, '')) || 0;
	const baseWager = parseFloat(inputs[2].value.replace(/[^0-9.]/g, '')) || 0;
    const startRace = parseInt(inputs[3].value);
    const rows = [...box.querySelectorAll('table tr')].slice(1);
    const legs = rows.map(row => {
      const inputs = row.querySelectorAll('input');
      return { legNo: parseInt(inputs[0].value), selections: inputs[1].value };
    });
    return { ticketName, amount, baseWager, startRace, legs };
  });

  fetch('/api/tickets/save', {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({ username, trackName, date, tickets })
  }).then(res => res.json()).then(() => alert('‚úÖ Tickets Saved'));
}
window.saveTickets = saveTickets;

function loadData() {
  const trackName = document.getElementById('trackName').value;
  const date = document.getElementById('raceDate').value;
  if (!date || !trackName) return;

  fetch(`/api/picks/${username}/${trackName}/${date}`)
    .then(res => res.json())
    .then(data => {
      const table = document.getElementById('picksTable');
      table.innerHTML = '<tr><th>Race #</th><th>Picks (1-2-3)</th><th>Remove</th></tr>';
      data.forEach(row => addPickRow(row.raceNo, row.picks));
    });

  fetch(`/api/tickets/${username}/${trackName}/${date}`)
    .then(res => res.json())
    .then(data => {
      const container = document.getElementById('ticketsContainer');
      container.innerHTML = '';
      data.forEach(ticket => {
        addTicket(ticket);
        const boxes = container.querySelectorAll('.ticketBox');
        const last = boxes[boxes.length - 1];
        ticket.legs.forEach(leg => addLeg(last.querySelector('button[onclick^="addLeg"]'), leg.legNo, leg.selections));
      });
    });
}
document.getElementById('trackName').addEventListener('change', loadData);
document.getElementById('raceDate').addEventListener('change', loadData);
</script>
</body>
</html>
